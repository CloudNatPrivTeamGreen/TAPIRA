{
	"info": {
		"_postman_id": "2920a856-82d4-4994-bcb4-c41018c72443",
		"name": "TAPIRA_Api",
		"description": "Api for the TAPIRA backend\n\nContact Support:\n Email: test@swagger.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "/api/",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/api/time",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/time",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"time"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch provided and reconstructed specifications from APIClarity and save them in database.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/apiclarity_specs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"apiclarity_specs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list of service names",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"services"
							]
						},
						"description": "Return list of unique service names with existing specifications."
					},
					"response": []
				},
				{
					"name": "Get filtered api specifications",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/specifications?&service=catalogue",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"specifications"
							],
							"query": [
								{
									"key": null,
									"value": null
								},
								{
									"key": "service",
									"value": "catalogue",
									"description": "(Required) "
								}
							]
						},
						"description": "Filter api specifications based on parameters."
					},
					"response": []
				},
				{
					"name": "Get latest api specification",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/current_version_spec?service=catalogue",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"current_version_spec"
							],
							"query": [
								{
									"key": "service",
									"value": "catalogue",
									"description": "(Required) "
								}
							]
						},
						"description": "Get latest api specification based on service name."
					},
					"response": []
				},
				{
					"name": "Upload existing API specification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) ",
									"type": "file",
									"src": "/home/ivalerievn/apps/cnpe/tapira/collection_sock_shop_openapis/catalogue_provided.json"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/upload?service=catalogue",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"upload"
							],
							"query": [
								{
									"key": "service",
									"value": "catalogue",
									"description": "(Required) "
								}
							]
						},
						"description": "Upload existing API specification and delete current proposals for the same service."
					},
					"response": []
				},
				{
					"name": "Get list of service with proposals names",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/service_proposals",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"service_proposals"
							]
						},
						"description": "Return list of unique service names with existing proposals for specifications."
					},
					"response": []
				},
				{
					"name": "Get proposal for a service",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/proposal?service=consectetur aliqua ut",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"proposal"
							],
							"query": [
								{
									"key": "service",
									"value": "consectetur aliqua ut",
									"description": "(Required) "
								}
							]
						},
						"description": "Get proposal by a service name."
					},
					"response": []
				},
				{
					"name": "Delete all proposals",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/housekeeping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"housekeeping"
							]
						},
						"description": "Delete all proposals"
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete all api specifications",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/test/housekeeping_specs?service=catalogue",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"test",
						"housekeeping_specs"
					],
					"query": [
						{
							"key": "service",
							"value": "catalogue",
							"description": "(Required) "
						}
					]
				},
				"description": "Delete all api specifications"
			},
			"response": [
				{
					"name": "Default error response",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/test/housekeeping_specs?service=consectetur aliqua ut",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test",
								"housekeeping_specs"
							],
							"query": [
								{
									"key": "service",
									"value": "consectetur aliqua ut"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"status\": \"laboris sit\",\n \"code\": -37115358,\n \"errors\": {},\n \"message\": \"cillum dolor officia in sint\"\n}"
				},
				{
					"name": "Delete specs for catalogue service",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/test/housekeeping_specs?service=catalogue",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test",
								"housekeeping_specs"
							],
							"query": [
								{
									"key": "service",
									"value": "catalogue",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Vary",
							"value": "Access-Control-Request-Method"
						},
						{
							"key": "Vary",
							"value": "Access-Control-Request-Headers"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sun, 06 Feb 2022 14:47:41 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"timestamp\": \"2022-02-06T14:47:41.832+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"path\": \"/test/housekeeping_specs\"\n}"
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/",
			"type": "string"
		}
	]
}